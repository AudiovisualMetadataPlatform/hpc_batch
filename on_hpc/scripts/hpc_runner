#!/usr/bin/env python3

import sys
import subprocess
from pathlib import Path
import logging
import argparse
import time

def main():
    parser = argparse.ArgumentParser()
    parser.add_argument("--debug", default=False, action="store_true", help="Turn on debugging")
    args = parser.parse_args()

    logging.basicConfig(level=logging.DEBUG if args.debug else logging.INFO, 
                        stream=sys.stderr,
                        format="%(asctime)s %(levelname)s %(message)s")

    workspace = Path(f"{sys.path[0]}/../workspace")
    if not workspace.exists():
        logging.error("Workspace doesn't exist!")
        exit(1)

    # continue running jobs until there are no more to do.
    while True:
        active = 0        
        for job in workspace.iterdir():
            if not job.is_dir() or (job / "finished.out").exists():
                # skip non-directories and those which are finished.
                continue

            active += 1
            if not (job / "job.sh").exists():
                # If older than 30 minutes, then we'll ignore it.
                if (time.time - job.stat().st_mtime) > 1800:                    
                    active -= 1
                continue

            # run the job and create the finished.out file.
            with open(job / "stdout.txt", mode="w", encoding='utf-8') as stdout:
                with open(job / "stderr.txt", mode="w", encoding='utf-8') as stderr:
                    script = job / "job.sh"                    
                    logging.debug(f"Running {script}")
                    proc = subprocess.run(script,
                                        stdout=stdout, stderr=stderr)
                    with open(job / "finished.out") as f:
                        f.write(str(proc.returncode) + "\n")
                    logging.debug(f"Exit with return code {proc.returncode}")
        
        if not active:
            break


if __name__ == "__main__":
    main()